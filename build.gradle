buildscript {
    repositories {
        mavenLocal()
        maven {
            url 'http://maven.milanaleksic.net/release'
        }
    }
    dependencies {
        classpath 'net.milanaleksic.gradle:multiplatform:0.7'
    }
}

import static net.milanaleksic.gradle.multiplatform.MultiPlatformAppPlugin.*
import static org.apache.tools.ant.taskdefs.condition.Os.*

apply plugin: 'java'
apply plugin: 'idea'

ext.swtVersion = "4.2"
ext.guavaVersion = "16.0.1"
ext.jacksonVersion = "2.3.2"
ext.guiceVersion = "4.0-beta4"
ext.springVersion = "3.1.1.RELEASE"

allprojects {

    apply plugin: 'multiplatform'

    group = 'net.milanaleksic.baobab'
    version = baobabVersion
    description = 'Baobab toolkit for building interfaces in SWT using JSON'

//    <developers>
//    <developer>
//    <name>Milan Aleksic</name>
//            <email>milanaleksic@gmail.com</email>
//    <roles>
//    <role>architect</role>
//                <role>developer</role>
//    </roles>
//            <timezone>+1</timezone>
//    </developer>
//    </developers>

    sourceCompatibility = sourceVersion
    targetCompatibility = sourceVersion

    repositories {
        mavenCentral()
        maven {
            url 'http://maven.milanaleksic.net/external'
        }
        maven {
            url 'http://maven.milanaleksic.net/release'
        }
    }

    configurations {
        win32
        win64
        linux32
        linux64
        compile
    }

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    multiplatform {
        version = project.version

        dependencyMappings {
            dependencyMapping('win32', FAMILY_WINDOWS, ARCH_X86)
            dependencyMapping('win64', FAMILY_WINDOWS, ARCH_X86_64)
            dependencyMapping('linux32', FAMILY_UNIX, ARCH_X86)
            dependencyMapping('linux64', FAMILY_UNIX, ARCH_X86_64)
        }
    }

    dependencies {
        win32 "org.eclipse.swt:org.eclipse.swt.win32.win32.x86:$swtVersion"
        win64 "org.eclipse.swt:org.eclipse.swt.win32.win32.x86_64:$swtVersion"
        linux32 "org.eclipse.swt:org.eclipse.swt.gtk.linux.x86:$swtVersion"
        linux64 "org.eclipse.swt:org.eclipse.swt.gtk.linux.x86_64:$swtVersion"
    }

    apply plugin: 'maven'
    uploadArchives {
        configurations { deployerJars }
        dependencies {
            deployerJars "org.springframework.build.aws:org.springframework.build.aws.maven:3.0.0.RELEASE"
        }

        repositories.mavenDeployer { deployer ->
            def repositoryUrl = 's3://maven.milanaleksic.net'

            description += repositoryUrl
            configuration = configurations.deployerJars
            // these properties ('s3AccessKey', 's3SecretAccessKey') should be defined in
            // 'gradle.properties' in $HOME/.gradle/gradle.properties
            def s3credentials = [
                    userName: project.properties.s3AccessKey,
                    passphrase: project.properties.s3SecretAccessKey
            ]
            repository(url: "$repositoryUrl/release/") { authentication(s3credentials) }
            snapshotRepository(url: "$repositoryUrl/snapshots/") { authentication(s3credentials) }
        }

    }
}